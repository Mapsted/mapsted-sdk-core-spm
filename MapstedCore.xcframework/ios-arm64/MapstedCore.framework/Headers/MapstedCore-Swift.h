// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef MAPSTEDCORE_SWIFT_H
#define MAPSTEDCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#import "/Users/Daniel/Projects/Xcode/ios-sdk/ios-sdk-core/positioning/positioning/positioning.h"

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MapstedCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC11MapstedCore9Analytics")
@interface Analytics : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class NSDate;

@interface Analytics (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t dataType;
@property (nonatomic, copy) NSString * _Nullable objectFilePath;
@property (nonatomic) int64_t propertyId;
@property (nonatomic, copy) NSDate * _Nullable sentTimestamp;
@property (nonatomic) int16_t status;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end


SWIFT_CLASS("_TtC11MapstedCore20AnalyticsSessionInfo")
@interface AnalyticsSessionInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull appName;
@property (nonatomic, copy) NSString * _Nonnull appVersion;
@property (nonatomic, copy) NSString * _Nonnull modelName;
@property (nonatomic, copy) NSString * _Nonnull logInEmail;
@property (nonatomic, copy) NSString * _Nonnull cppVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11MapstedCore21BearingChangeListener_")
@protocol BearingChangeListener
/// This function will call everytime bearing changes
- (void)onBearingChangedWithDegrees:(CGFloat)degrees;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore21BuildingCoverImagesDO")
@interface BuildingCoverImagesDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class BuildingDO;

@interface BuildingCoverImagesDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable imageId;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic) int16_t sortOrder;
@property (nonatomic, strong) BuildingDO * _Nullable ofBuilding;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore10BuildingDO")
@interface BuildingDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSSet;

@interface BuildingDO (SWIFT_EXTENSION(MapstedCore))
- (void)addCoverImagesObject:(BuildingCoverImagesDO * _Nonnull)value;
- (void)removeCoverImagesObject:(BuildingCoverImagesDO * _Nonnull)value;
- (void)addCoverImages:(NSSet * _Nonnull)values;
- (void)removeCoverImages:(NSSet * _Nonnull)values;
@end

@class BuildingLanguageDO;

@interface BuildingDO (SWIFT_EXTENSION(MapstedCore))
- (void)addLanguagesObject:(BuildingLanguageDO * _Nonnull)value;
- (void)removeLanguagesObject:(BuildingLanguageDO * _Nonnull)value;
- (void)addLanguages:(NSSet * _Nonnull)values;
- (void)removeLanguages:(NSSet * _Nonnull)values;
@end

@class LevelDO;

@interface BuildingDO (SWIFT_EXTENSION(MapstedCore))
- (void)addLevelsObject:(LevelDO * _Nonnull)value;
- (void)removeLevelsObject:(LevelDO * _Nonnull)value;
- (void)addLevels:(NSSet * _Nonnull)values;
- (void)removeLevels:(NSSet * _Nonnull)values;
@end

@class BuildingSubcategoryDO;

@interface BuildingDO (SWIFT_EXTENSION(MapstedCore))
- (void)addSubcategoriesObject:(BuildingSubcategoryDO * _Nonnull)value;
- (void)removeSubcategoriesObject:(BuildingSubcategoryDO * _Nonnull)value;
- (void)addSubcategories:(NSSet * _Nonnull)values;
- (void)removeSubcategories:(NSSet * _Nonnull)values;
@end

@class EntityHoursDO;

@interface BuildingDO (SWIFT_EXTENSION(MapstedCore))
- (void)addOpeningHoursObject:(EntityHoursDO * _Nonnull)value;
- (void)removeOpeningHoursObject:(EntityHoursDO * _Nonnull)value;
- (void)addOpeningHours:(NSSet * _Nonnull)values;
- (void)removeOpeningHours:(NSSet * _Nonnull)values;
@end

@class PropertyDO;

@interface BuildingDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable addressCity;
@property (nonatomic, copy) NSString * _Nullable addressCountry;
@property (nonatomic, copy) NSString * _Nullable addressFull;
@property (nonatomic, copy) NSString * _Nullable addressPostal;
@property (nonatomic, copy) NSString * _Nullable addressProvince;
@property (nonatomic, copy) NSString * _Nullable addressStreet;
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSString * _Nullable centroidType;
@property (nonatomic) double centroidX;
@property (nonatomic) double centroidY;
@property (nonatomic) double centroidZ;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic, copy) NSString * _Nullable imageBaseUrl;
@property (nonatomic, copy) NSString * _Nullable phoneNumber;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable syncId;
@property (nonatomic, copy) NSString * _Nullable timeZoneName;
@property (nonatomic) int32_t timeZoneOffset;
@property (nonatomic, copy) NSString * _Nullable website;
@property (nonatomic, strong) NSSet * _Nullable coverImages;
@property (nonatomic, strong) NSSet * _Nullable languages;
@property (nonatomic, strong) NSSet * _Nullable levels;
@property (nonatomic, strong) PropertyDO * _Nullable ofProperty;
@property (nonatomic, strong) NSSet * _Nullable openingHours;
@property (nonatomic, strong) NSSet * _Nullable subcategories;
@end


SWIFT_CLASS("_TtC11MapstedCore23BuildingDataListRequest")
@interface BuildingDataListRequest : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore18BuildingEntitiesDO")
@interface BuildingEntitiesDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class StoreDO;

@interface BuildingEntitiesDO (SWIFT_EXTENSION(MapstedCore))
- (void)addStoresObject:(StoreDO * _Nonnull)value;
- (void)removeStoresObject:(StoreDO * _Nonnull)value;
- (void)addStores:(NSSet * _Nonnull)values;
- (void)removeStores:(NSSet * _Nonnull)values;
@end


@interface BuildingEntitiesDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSString * _Nullable dateAdded;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable syncId;
@property (nonatomic, strong) NSSet * _Nullable stores;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore18BuildingLanguageDO")
@interface BuildingLanguageDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface BuildingLanguageDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable categoryId;
@property (nonatomic, copy) NSString * _Nullable categoryName;
@property (nonatomic, copy) NSString * _Nullable descriptionText;
@property (nonatomic, copy) NSString * _Nullable iconDark;
@property (nonatomic, copy) NSString * _Nullable iconImage;
@property (nonatomic, copy) NSString * _Nullable iconLight;
@property (nonatomic) BOOL iconStyleLocationSet;
@property (nonatomic) double iconStyleLocationX;
@property (nonatomic) double iconStyleLocationY;
@property (nonatomic) float iconStyleRotation;
@property (nonatomic) BOOL iconStyleRotationSet;
@property (nonatomic) float iconStyleSize;
@property (nonatomic, copy) NSString * _Nullable keywords;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable longName;
@property (nonatomic) BOOL mobileSettingFreeRotation;
@property (nonatomic, copy) NSString * _Nullable shortName;
@property (nonatomic) BOOL styleUseIcon;
@property (nonatomic) BOOL styleUseText;
@property (nonatomic) BOOL textStyleLocationSet;
@property (nonatomic) double textStyleLocationX;
@property (nonatomic) double textStyleLocationY;
@property (nonatomic) float textStyleRotation;
@property (nonatomic, copy) NSString * _Nullable website;
@property (nonatomic, strong) BuildingDO * _Nullable ofBuilding;
@end

@class MapstedSearchEntity;
@class MNSearchEntity;

SWIFT_CLASS("_TtC11MapstedCore21MapstedSearchEntities")
@interface MapstedSearchEntities : NSObject
- (NSDictionary<NSNumber *, MapstedSearchEntity *> * _Nonnull)getSearchEntityMap SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getBuildingId SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getPropertyId SWIFT_WARN_UNUSED_RESULT;
- (MNSearchEntity * _Nullable)getEntityWithSearchEntityId:(NSInteger)searchEntityId SWIFT_WARN_UNUSED_RESULT;
- (NSArray<MNSearchEntity *> * _Nonnull)getSearchEntities SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore22BuildingSearchEntities")
@interface BuildingSearchEntities : MapstedSearchEntities
- (NSDictionary<NSNumber *, MapstedSearchEntity *> * _Nonnull)getSearchEntityMap SWIFT_WARN_UNUSED_RESULT;
- (MNSearchEntity * _Nullable)getEntityWithSearchEntityId:(NSInteger)searchEntityId SWIFT_WARN_UNUSED_RESULT;
- (NSArray<MNSearchEntity *> * _Nonnull)getSearchEntities SWIFT_WARN_UNUSED_RESULT;
@end

@class MNEntityZone;
@class MNZoneLabel;
@class CMSEntityInfo;
@class MNMercator;
@class MNMercatorZone;

SWIFT_CLASS("_TtC11MapstedCore19MapstedSearchEntity")
@interface MapstedSearchEntity : NSObject
@property (nonatomic) NSInteger propertyId;
@property (nonatomic) NSInteger buildingId;
@property (nonatomic) NSInteger floorId;
@property (nonatomic) NSInteger entityId;
@property (nonatomic, copy) NSString * _Nonnull categoryUid;
@property (nonatomic, copy) NSString * _Nonnull logoImageUid;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable categoryName;
@property (nonatomic, copy) NSString * _Nonnull iconImageId;
@property (nonatomic) NSInteger searchEntityId;
@property (nonatomic, copy) NSString * _Nonnull entityGroupId;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull entityIds;
@property (nonatomic, copy) NSArray<MNEntityZone *> * _Nonnull entityZones;
@property (nonatomic, copy) NSArray<MNZoneLabel *> * _Nonnull zoneLabels;
- (void)addEntityIdWithNewEntityId:(NSInteger)newEntityId;
- (void)addEntitiesWithNewEntities:(NSArray<CMSEntityInfo *> * _Nonnull)newEntities mapDataType:(MNDataType)mapDataType;
- (void)addEntityWithNewEntity:(CMSEntityInfo * _Nonnull)newEntity mapDataType:(MNDataType)mapDataType;
@property (nonatomic, readonly) MNDataType mapDataType;
- (MNMercator * _Nonnull)getLocation SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)searchKeywords SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getKeywords SWIFT_WARN_UNUSED_RESULT;
+ (MNMercatorZone * _Nonnull)getTextLocation SWIFT_WARN_UNUSED_RESULT;
+ (MNMercatorZone * _Nonnull)getIconLocation SWIFT_WARN_UNUSED_RESULT;
+ (float)getIconSize SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getPropertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getCategoryUid SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getNameEnglish SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isSearchable SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasText SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasIcon SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getEntityNameId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getIconImageId SWIFT_WARN_UNUSED_RESULT;
- (NSArray<MNZoneLabel *> * _Nonnull)getZoneLabels SWIFT_WARN_UNUSED_RESULT;
- (NSArray<MNEntityZone *> * _Nonnull)getEntityZones SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getEntityIds SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getFloorName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore20BuildingSearchEntity")
@interface BuildingSearchEntity : MapstedSearchEntity
@end


SWIFT_CLASS_NAMED("BuildingSubcategoryDO")
@interface BuildingSubcategoryDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface BuildingSubcategoryDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable idString;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable nameString;
@property (nonatomic, strong) BuildingDO * _Nullable ofBuilding;
@end


SWIFT_CLASS("_TtC11MapstedCore15BuildingVersion")
@interface BuildingVersion : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore13CMSEntityInfo")
@interface CMSEntityInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore15CMSBuildingInfo")
@interface CMSBuildingInfo : CMSEntityInfo
@end


SWIFT_CLASS("_TtC11MapstedCore13CMSCategories")
@interface CMSCategories : NSObject
@property (nonatomic, readonly) NSInteger propertyId;
@property (nonatomic, readonly, copy) NSString * _Nonnull categoryId;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CMSCategories * _Nonnull shared;)
+ (CMSCategories * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)getEntityCategoryId;
- (void)isCategoryInSubTree;
- (void)getCategoryMap;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11MapstedCore15CMSCategoryTree")
@interface CMSCategoryTree : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11MapstedCore16CMSCoreDataStack")
@interface CMSCoreDataStack : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class PropertySearchEntities;
@class CMSPropertyInfo;
@class CMSStoreInfo;
@class MNHoursOfOperation;

SWIFT_CLASS("_TtC11MapstedCore10CMSManager")
@interface CMSManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CMSManager * _Nonnull shared;)
+ (CMSManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (MapstedSearchEntity * _Nonnull)getSearchEntityWithPropertyId:(NSInteger)propertyId searchEntityId:(NSInteger)searchEntityId SWIFT_WARN_UNUSED_RESULT;
+ (MapstedSearchEntity * _Nonnull)getSearchEntityForProperty:(NSInteger)propertyId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (MapstedSearchEntity * _Nonnull)getSearchEntityForProperty:(NSInteger)propertyId entityGroupId:(NSString * _Nonnull)entityGroupId SWIFT_WARN_UNUSED_RESULT;
+ (MapstedSearchEntity * _Nonnull)getSearchEntityForBuildingWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (MapstedSearchEntity * _Nonnull)getSearchEntityForBuildingWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId entityGroupId:(NSString * _Nonnull)entityGroupId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPolygonName SWIFT_WARN_UNUSED_RESULT;
+ (float)getBuildingFloorDeltaZ:(NSInteger)buildingId SWIFT_WARN_UNUSED_RESULT;
+ (float)getBuildingMinZ:(NSInteger)buildingId SWIFT_WARN_UNUSED_RESULT;
+ (MapstedBuildingCurrentStatus)getBuildingCurrentStatus:(NSInteger)buildingId SWIFT_WARN_UNUSED_RESULT;
+ (BuildingSearchEntities * _Nonnull)getBuildingSearchEntitiesWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId SWIFT_WARN_UNUSED_RESULT;
+ (PropertySearchEntities * _Nonnull)getPropertySearchEntities:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (void)deserializeBuildingDataWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId;
- (CMSPropertyInfo * _Nullable)getPropertyInfo:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
- (CMSPropertyInfo * _Nullable)getPropertyInfoFromDB:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (void)checkPropertyStatus:(NSInteger)id completed:(void (^ _Nonnull)(BOOL))completed;
+ (void)fetchPropertyInfo:(NSInteger)id syncCheck:(BOOL)syncCheck;
+ (void)getRouteDistanceTimeEstimate;
+ (CMSBuildingInfo * _Nullable)getEntityForPropertyWithPropertyId:(NSInteger)propertyId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyEntityNameWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (CMSStoreInfo * _Nullable)getEntityForBuildingWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getBuildingEntityCategoryName:(NSInteger)buildingId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getBuildingEntityCategoryUid:(NSInteger)buildingId entityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
+ (void)categoryMap;
+ (NSString * _Nonnull)getCategoryName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getCategoryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getCategoryGuid SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getCategoryImageGuid SWIFT_WARN_UNUSED_RESULT;
+ (void)getCategoryRoots;
+ (void)isCategoryInSubTree;
+ (NSString * _Nonnull)getSelectedImageGuid SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getChildrenGuids SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getOrderedChildrenGuids SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyLongName:(NSInteger)propertyId defaultName:(NSString * _Nonnull)defaultName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyShortName:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyFullAddress:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyStreetAddress:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyPostalCode:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (MNHoursOfOperation * _Nonnull)getPropertyHours:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyImageBaseUrl:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyImageUid:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getPropertyCoverImages:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getPropertyCityId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyCityName:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getPropertyCountyId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyCountryLongName:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyCountryShortName:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getPropertyStateProvinceId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyStateProvinceLongName:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyStateProvinceShortName:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyWebsite:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getPropertyPhoneNumber:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
+ (void)getLayerStyle;
+ (NSString * _Nullable)getFloorNameWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId floorId:(NSInteger)floorId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getFloorNameShortWithPropertyId:(NSInteger)propertyId buildingId:(NSInteger)buildingId floorId:(NSInteger)floorId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11MapstedCore15CMSPropertyInfo")
@interface CMSPropertyInfo : CMSEntityInfo
@end


SWIFT_CLASS("_TtC11MapstedCore12CMSStoreInfo")
@interface CMSStoreInfo : CMSEntityInfo
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore10CategoryDO")
@interface CategoryDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class CategoryLanguageDO;

@interface CategoryDO (SWIFT_EXTENSION(MapstedCore))
- (void)addCategoryLanguagesObject:(CategoryLanguageDO * _Nonnull)value;
- (void)removeCategoryLanguagesObject:(CategoryLanguageDO * _Nonnull)value;
- (void)addCategoryLanguages:(NSSet * _Nonnull)values;
- (void)removeCategoryLanguages:(NSSet * _Nonnull)values;
@end

@class SubCategoryDO;

@interface CategoryDO (SWIFT_EXTENSION(MapstedCore))
- (void)addSubCategoriesObject:(SubCategoryDO * _Nonnull)value;
- (void)removeSubCategoriesObject:(SubCategoryDO * _Nonnull)value;
- (void)addSubCategories:(NSSet * _Nonnull)values;
- (void)removeSubCategories:(NSSet * _Nonnull)values;
@end

@class PropertyCategoryDO;

@interface CategoryDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable categoryId;
@property (nonatomic, copy) NSString * _Nullable englishName;
@property (nonatomic, copy) NSString * _Nullable iconImageId;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, strong) NSSet * _Nullable categoryLanguages;
@property (nonatomic, strong) PropertyCategoryDO * _Nullable isBranchCategoryOf;
@property (nonatomic, strong) PropertyCategoryDO * _Nullable isRootCategoryOf;
@property (nonatomic, strong) NSSet * _Nullable subCategories;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore18CategoryLanguageDO")
@interface CategoryLanguageDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface CategoryLanguageDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable categoryName;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, strong) CategoryDO * _Nullable languageValue;
@end

@class NSData;

SWIFT_CLASS("_TtC11MapstedCore12CompressData")
@interface CompressData : NSObject
- (NSData * _Nullable)compressWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum StatusMessageType : NSInteger;

/// Listener for result of Core SDK initialization
SWIFT_PROTOCOL("_TtP11MapstedCore16CoreInitCallback_")
@protocol CoreInitCallback
/// Called when Core SDK has successfully initialized
- (void)onSuccess;
/// Called when Core SDK has failed to initialize
/// \param errorCode Error code
///
/// \param errorMessage The message to describe error
///
- (void)onFailureWithErrorCode:(NSInteger)errorCode errorMessage:(NSString * _Nonnull)errorMessage;
/// Called when any status messages are to be shown as an intermediate update
/// \param messsageType Enum for the status message
///
- (void)onStatusMessageWithMessageType:(enum StatusMessageType)messageType;
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSHTTPURLResponse;
@class NSURLRequest;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;

/// The task delegate is responsible for handling all delegate callbacks for the underlying task as well as
/// executing all operations attached to the serial operation queue upon task completion.
SWIFT_CLASS("_TtC11MapstedCore12TaskDelegate")
@interface TaskDelegate : NSObject
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSURLSessionDownloadTask;
@class NSCachedURLResponse;

SWIFT_CLASS("_TtC11MapstedCore16DataTaskDelegate")
@interface DataTaskDelegate : TaskDelegate <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end


@class NSURL;

SWIFT_CLASS("_TtC11MapstedCore20DownloadTaskDelegate")
@interface DownloadTaskDelegate : TaskDelegate <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore13EntityHoursDO")
@interface EntityHoursDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface EntityHoursDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic) int32_t closingDayOfWeek;
@property (nonatomic) int32_t closingHour;
@property (nonatomic) int32_t closingMinute;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic) BOOL isBuildingEntity;
@property (nonatomic) BOOL isPropertyEntity;
@property (nonatomic) int32_t openingDayOfWeek;
@property (nonatomic) int32_t openingHour;
@property (nonatomic) int32_t openingMinute;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, strong) BuildingDO * _Nullable ofBuilding;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore14EntityLanguage")
@interface EntityLanguage : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface EntityLanguage (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic, copy) NSString * _Nullable iconId;
@property (nonatomic, copy) NSString * _Nullable imageBaseUrl;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable nameLong;
@property (nonatomic, copy) NSString * _Nullable nameShort;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable syncId;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore16FavoriteEntityDO")
@interface FavoriteEntityDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface FavoriteEntityDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSDate * _Nullable dateCreated;
@property (nonatomic, copy) NSString * _Nullable englishName;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic) int32_t propertyId;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore9HolidayDO")
@interface HolidayDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface HolidayDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable countryCode;
@property (nonatomic) int32_t day;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic) int32_t month;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) int32_t year;
@end

/// Enumerates the various ways network resource can be reached
typedef SWIFT_ENUM(NSInteger, IsReachable, closed) {
  IsReachableWifi = 1,
  IsReachableCellular = 2,
  IsReachableNotReachable = 3,
  IsReachableUnknown = 4,
};


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore7LevelDO")
@interface LevelDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class LevelLanguageDO;

@interface LevelDO (SWIFT_EXTENSION(MapstedCore))
- (void)addLevelLanguagesObject:(LevelLanguageDO * _Nonnull)value;
- (void)removeLevelLanguagesObject:(LevelLanguageDO * _Nonnull)value;
- (void)addLevelLanguages:(NSSet * _Nonnull)values;
- (void)removeLevelLanguages:(NSSet * _Nonnull)values;
@end


@interface LevelDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic) int32_t floorId;
@property (nonatomic) int32_t floorNumber;
@property (nonatomic, copy) NSString * _Nullable syncId;
@property (nonatomic, strong) NSSet * _Nullable levelLanguages;
@property (nonatomic, strong) BuildingDO * _Nullable ofBuilding;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore15LevelLanguageDO")
@interface LevelLanguageDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface LevelLanguageDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable longName;
@property (nonatomic, copy) NSString * _Nullable shortName;
@property (nonatomic, strong) LevelDO * _Nullable ofLevel;
@end

@class MNZone;

SWIFT_CLASS("_TtC11MapstedCore28MNAssistedPositioningManager")
@interface MNAssistedPositioningManager : NSObject
@property (nonatomic, readonly, strong) MNZone * _Nullable prevZone;
@property (nonatomic, readonly, strong) MNZone * _Nullable newZone;
@property (nonatomic, readonly, copy) NSDate * _Nullable timestamp;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull nearbyEntities;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Whether Floor change confirmation should be requested
/// \param prevZone An object identifying the previous zone
///
/// \param newZone An object identifying the new zone
///
- (void)requestZoneChangeConfirmationWithPrevZone:(MNZone * _Nonnull)prevZone newZone:(MNZone * _Nonnull)newZone;
- (void)requestSelectNearbyEntityList:(NSArray<NSNumber *> * _Nonnull)entityList;
@end


/// Use to check if ble is on or off. Used with Assisted Positioning.
SWIFT_CLASS("_TtC11MapstedCore18MNBleDeviceManager")
@interface MNBleDeviceManager : NSObject
/// A handler for when a the time set for rechecking BLE status is due
- (void)recheckTimerFired;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CBCentralManager;

@interface MNBleDeviceManager (SWIFT_EXTENSION(MapstedCore)) <CBCentralManagerDelegate>
/// Updates class properties (isEnabled, isSupported) based on BLE device state variables as reported by the system.
/// \param central An instance of the CBCentralManager system object that scans for, discovers, connects to, and manages peripherals.
///
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
@end


/// Encapsulates a building data request from the network
SWIFT_CLASS("_TtC11MapstedCore21MNBuildingDataRequest")
@interface MNBuildingDataRequest : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore21MNBuildingDataStorage")
@interface MNBuildingDataStorage : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class MNDataObject;

@interface MNBuildingDataStorage (SWIFT_EXTENSION(MapstedCore))
- (void)addDatasObject:(MNDataObject * _Nonnull)value;
- (void)removeDatasObject:(MNDataObject * _Nonnull)value;
- (void)addDatas:(NSSet * _Nonnull)values;
- (void)removeDatas:(NSSet * _Nonnull)values;
@end

@class MNLanguage;

@interface MNBuildingDataStorage (SWIFT_EXTENSION(MapstedCore))
- (void)addLanguagesObject:(MNLanguage * _Nonnull)value;
- (void)removeLanguagesObject:(MNLanguage * _Nonnull)value;
- (void)addLanguages:(NSSet * _Nonnull)values;
- (void)removeLanguages:(NSSet * _Nonnull)values;
@end


@interface MNBuildingDataStorage (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int64_t buildingId;
@property (nonatomic) int32_t totalDownloadSize;
@property (nonatomic) int64_t version;
@property (nonatomic, strong) NSSet * _Nullable datas;
@property (nonatomic, strong) NSSet * _Nullable languages;
@end


@interface MNBuildingSearchEntities (SWIFT_EXTENSION(MapstedCore))
/// Function to get all Search Entity objects
///
/// returns:
/// A list of all available SearchEntity objects, or nil if none are found
- (NSArray<MNSearchEntity *> * _Nonnull)searchEntities SWIFT_WARN_UNUSED_RESULT;
/// Function to get a Search Entity object corresponding to a given Search entity ID
/// <ul>
///   <li>
///     Parameter: searchEntityId: a number identifying a specific search entity
///   </li>
/// </ul>
///
/// returns:
/// A matching SearchEntity object, or nil if no matches found
- (MNSearchEntity * _Nullable)searchEntityWithEntityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11MapstedCore9MNContent")
@interface MNContent : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MNContent (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int64_t contentType;
@property (nonatomic, copy) NSData * _Nullable data;
@property (nonatomic) int64_t dataId;
@property (nonatomic) int64_t dataType;
@property (nonatomic, copy) NSString * _Nullable licenceId;
@property (nonatomic) int64_t version;
@end

@class MNObjectDataMap;

/// Encapsulates the management of the database with Core Data
SWIFT_CLASS("_TtC11MapstedCore20MNCoreDataController")
@interface MNCoreDataController : NSObject
+ (MNCoreDataController * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isPropertyInfosUpdated SWIFT_WARN_UNUSED_RESULT;
///
/// returns:
/// the objectmap containing all avaiable PropertyInfo
- (MNObjectDataMap * _Nullable)getPropertyInfos SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)getPropertyInfoJsonList SWIFT_WARN_UNUSED_RESULT;
/// Verifies whether data for a speicifed property is successfully downloaded
/// \param propertyId A number identifying the building whose data is to be downloaded
///
///
/// returns:
/// True if the data for the specified propety is fetched successfully.
- (BOOL)isPropertyDownloadedWithPropertyId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
/// Saves analytics package of type ‘type’ at the specified path ‘filePath’
/// \param filePath The object file path
///
/// \param type A number identifying the type of analytics package
///
- (void)saveAnalyticsPackageWithFilePath:(NSString * _Nonnull)filePath propertyId:(int64_t)propertyId type:(int32_t)type;
///
/// returns:
/// A collection of a analytics packages.
- (NSArray<NSDictionary<NSString *, id> *> * _Nonnull)fetchAnalyticsPackages SWIFT_WARN_UNUSED_RESULT;
///
/// returns:
/// A collection of a analytics packages to be posted.
- (NSArray<NSDictionary<NSString *, id> *> * _Nonnull)fetchAnalyticsPackagesToPost SWIFT_WARN_UNUSED_RESULT;
/// Update a package of analytics data at the specified path as sent
/// \param filePath The object file path associated with the anaytics package
///
- (void)updateAnalyticsPackageAsSentWithFilePath:(NSString * _Nonnull)filePath;
/// Deletes a package of analytics data at the specified path
/// \param filePath The object file path associated with the anaytics package
///
- (void)deleteAnalyticsPackageWithFilePath:(NSString * _Nonnull)filePath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum MNCoreNotificationType : NSInteger;

/// It represents an observable object. An observable object can have
/// one or more observers.
SWIFT_CLASS("_TtC11MapstedCore25MNCoreNotificationManager")
@interface MNCoreNotificationManager : NSObject
/// Singleton pattern to get the core notification itself.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MNCoreNotificationManager * _Nonnull main;)
+ (MNCoreNotificationManager * _Nonnull)main SWIFT_WARN_UNUSED_RESULT;
- (void)postNotification:(enum MNCoreNotificationType)type;
- (void)postNotificationWithUserInfoWithType:(enum MNCoreNotificationType)type userInfo:(NSDictionary * _Nullable)userInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Notification types.
typedef SWIFT_ENUM(NSInteger, MNCoreNotificationType, closed) {
/// Positioning setup related notification.
  MNCoreNotificationTypeInitialized = 0,
/// Building related notification.
/// <ul>
///   <li>
///     Building downloaded.
///   </li>
///   <li>
///     Building selected.
///   </li>
/// </ul>
  MNCoreNotificationTypeBuilding = 1,
/// Post notification when detect user is close to a building
  MNCoreNotificationTypeNearBuilding = 2,
/// Search entity related notification
  MNCoreNotificationTypeEntity = 3,
/// Location related notification.
/// <ul>
///   <li>
///     Location change.
///   </li>
/// </ul>
  MNCoreNotificationTypeLocation = 4,
/// Routing related notification
/// <ul>
///   <li>
///     Routing
///   </li>
/// </ul>
  MNCoreNotificationTypeRouting = 5,
/// Sign detection notification
  MNCoreNotificationTypeSign = 6,
/// Any activity related notification, mainly for progress bar
  MNCoreNotificationTypeActivity = 7,
/// Any assisted positioning UI change notification
  MNCoreNotificationTypeBanner = 8,
  MNCoreNotificationTypeNearbyEntities = 9,
  MNCoreNotificationTypeSelectNearbyEntityRequest = 10,
  MNCoreNotificationTypeZoneChange = 11,
/// Bluetooth device related notification, when user switch to enable
  MNCoreNotificationTypeBluetooth = 12,
/// Any licence status change will fire this notification
  MNCoreNotificationTypeLicence = 13,
/// Post a notification when a property finish fetching its images
  MNCoreNotificationTypeImageFetched = 14,
/// Post a notification when a property data or building data download progress changes. When this type of notification posted, a userInfo must come with it.
/// <ul>
///   <li>
///     UserInfo: dataId: <code>int</code> building or property id
///   </li>
///   <li>
///     UserInfo: requestType: <code>int</code> MNRequestType raw value.
///   </li>
///   <li>
///     UserInfo: progress: <code>int</code> progress
///   </li>
/// </ul>
  MNCoreNotificationTypeDataDownloadProgress = 15,
  MNCoreNotificationTypeBuildingDataDeserialized = 16,
  MNCoreNotificationTypePropertyDataDeserialized = 17,
/// Post a notification when get a marketing event
  MNCoreNotificationTypeMarketing = 18,
/// Post a notification when get a shareLocation event
  MNCoreNotificationTypeShareLocation = 19,
  MNCoreNotificationTypeAnalytics = 20,
  MNCoreNotificationTypePropertyCategoryUpdated = 21,
  MNCoreNotificationTypePropertyUpdated = 22,
  MNCoreNotificationTypeDataCaptureUpdated = 23,
};



SWIFT_CLASS("_TtC11MapstedCore12MNDataObject")
@interface MNDataObject : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MNDataObject (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSData * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable dataId;
@property (nonatomic) BOOL downloaded;
@property (nonatomic) int32_t downloadSize;
@property (nonatomic) int32_t propertyId;
@property (nonatomic) int64_t type;
@property (nonatomic) int64_t version;
@property (nonatomic, strong) MNBuildingDataStorage * _Nullable parentBuilding;
@end


@interface MNEntityZone (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, readonly, strong) MNZone * _Nonnull zoneValue;
- (NSString * _Nonnull)getZoneString SWIFT_WARN_UNUSED_RESULT;
- (void)setNearbyLandmarkName;
@end


SWIFT_CLASS("_TtC11MapstedCore10MNLanguage")
@interface MNLanguage : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MNLanguage (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSData * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable dataId;
@property (nonatomic) BOOL downloaded;
@property (nonatomic) int32_t downloadSize;
@property (nonatomic) int16_t languageCode;
@property (nonatomic) int64_t version;
@end


SWIFT_CLASS("_TtC11MapstedCore16MNMapDataRequest")
@interface MNMapDataRequest : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface MNMapEntity (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Encapsulates the details of a retry attempt at making requests over the network
SWIFT_CLASS("_TtC11MapstedCore24MNNetworkDataRetryDetail")
@interface MNNetworkDataRetryDetail : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Faciliates synchronous and asynchronous network operations.
SWIFT_CLASS("_TtC11MapstedCore16MNNetworkManager")
@interface MNNetworkManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end











SWIFT_CLASS("_TtC11MapstedCore15MNNetworkStatus")
@interface MNNetworkStatus : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum Level : NSInteger;

/// Encapsulates information regarding information logged for debugging purposes.
SWIFT_CLASS("_TtC11MapstedCore7MNPrint")
@interface MNPrint : NSObject
/// Print function used in Objective-C. Please only use this print inside objective-c. For swift print, use p:l:t.
/// Print will only log message under debug mode and will abort the process for critial errors.
/// \param l Log level.
///
/// \param f File and function for the print.
///
/// \param t Text message or error message.
///
+ (void)objcPWithL:(enum Level)l f:(NSString * _Nonnull)f t:(NSString * _Nonnull)t;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, Level, closed) {
  LevelV = 0,
  LevelD = 1,
  LevelE = 2,
  LevelWtf = 3,
};




/// Encapsulates a property data request from the network
SWIFT_CLASS("_TtC11MapstedCore21MNPropertyDataRequest")
@interface MNPropertyDataRequest : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore21MNPropertyDataStorage")
@interface MNPropertyDataStorage : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MNPropertyDataStorage (SWIFT_EXTENSION(MapstedCore))
- (void)addDatasObject:(MNDataObject * _Nonnull)value;
- (void)removeDatasObject:(MNDataObject * _Nonnull)value;
- (void)addDatas:(NSSet * _Nonnull)values;
- (void)removeDatas:(NSSet * _Nonnull)values;
@end


@interface MNPropertyDataStorage (SWIFT_EXTENSION(MapstedCore))
- (void)addLanguagesObject:(MNLanguage * _Nonnull)value;
- (void)removeLanguagesObject:(MNLanguage * _Nonnull)value;
- (void)addLanguages:(NSSet * _Nonnull)values;
- (void)removeLanguages:(NSSet * _Nonnull)values;
@end


@interface MNPropertyDataStorage (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int64_t propertyId;
@property (nonatomic) int32_t totalDownloadSize;
@property (nonatomic) int64_t version;
@property (nonatomic, strong) NSSet * _Nullable datas;
@property (nonatomic, strong) NSSet * _Nullable languages;
@end


/// Encapsulates a property info request from the network
SWIFT_CLASS("_TtC11MapstedCore21MNPropertyInfoRequest")
@interface MNPropertyInfoRequest : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface MNPropertySearchEntities (SWIFT_EXTENSION(MapstedCore))
/// Function to get all Search Entity objects
///
/// returns:
/// A list of all available SearchEntity objects, or nil if none are found
- (NSArray<MNSearchEntity *> * _Nonnull)searchEntities SWIFT_WARN_UNUSED_RESULT;
/// Function to get a Search Entity object corresponding to a given Search entity ID
/// <ul>
///   <li>
///     Parameter: searchEntityId: a number identifying a specific search entity
///   </li>
/// </ul>
///
/// returns:
/// A matching SearchEntity object, or nil if no matches found
- (MNSearchEntity * _Nullable)searchEntityWithEntityId:(NSInteger)entityId SWIFT_WARN_UNUSED_RESULT;
@end



@interface MNRouteNode (SWIFT_EXTENSION(MapstedCore))
- (void)setLandmarkEntityIds:(NSArray<NSNumber *> * _Nonnull)ids;
- (NSArray * _Nonnull)convertLandmarkEntityIds:(NSArray<NSNumber *> * _Nonnull)ids SWIFT_WARN_UNUSED_RESULT;
@end



@interface MNSearchEntity (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, readonly, copy) NSString * _Nonnull entityName;
@property (nonatomic, readonly, copy) NSString * _Nonnull entityNameEnglish;
@property (nonatomic, readonly) NSInteger entityFloorId;
@property (nonatomic, readonly, copy) NSString * _Nonnull floorName;
@property (nonatomic, readonly, copy) NSString * _Nonnull floorNameShort;
@property (nonatomic, readonly) NSInteger entityPropertyId;
@property (nonatomic, readonly) NSInteger entityBuildingId;
@property (nonatomic, readonly, copy) NSString * _Nonnull entityCategoryName;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull entitySubCategoryNames;
@property (nonatomic, readonly) NSInteger entityIdentifier;
@property (nonatomic, readonly, copy) NSArray<MNEntityZone *> * _Nonnull entityZoneArray;
- (NSArray<NSNumber *> * _Nonnull)entityIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)keywords SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<MNZoneLabel *> * _Nonnull zoneLabelArray;
@end


/// Encapsulates innformation regarding environmental settings
SWIFT_CLASS("_TtC11MapstedCore14MNSettingUtils")
@interface MNSettingUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MNSettingUtils * _Nonnull shared;)
+ (MNSettingUtils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) BOOL findAFriendIsEnabled;
@property (nonatomic) BOOL postLiveLocationEnabled;
@property (nonatomic) BOOL postAnalyticsOnMobileDataEnabled;
@property (nonatomic) BOOL RestrictOffPremiseBackgroundLocationScanning;
@property (nonatomic, readonly) BOOL debugTestModuleEnable;
@property (nonatomic, readonly) BOOL debugReadFileAsIOS;
@property (nonatomic, readonly) BOOL debugTestFileIOSEncoding;
@property (nonatomic, readonly) BOOL debugDrawTrajectory;
@property (nonatomic, readonly) BOOL debugDrawMaxStateHistory;
@end


SWIFT_CLASS("_TtC11MapstedCore19MNShareLocationItem")
@interface MNShareLocationItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface MNTag (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, readonly) NSInteger propertyId;
@property (nonatomic, readonly) NSInteger buildingId;
@property (nonatomic, readonly) NSInteger floorId;
@end


SWIFT_CLASS("_TtC11MapstedCore12MNUrlManager")
@interface MNUrlManager : NSObject
/// \param type The type of analytics data. Please refer to <code>AnalyticsType</code>.
///
///
/// returns:
/// The URL for analytics
- (NSString * _Nonnull)getAnalyticsUrlWithType:(AnalyticsType)type SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPostLivePositionUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPostUserFirebaseTokenUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore10MapIconsDO")
@interface MapIconsDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MapIconsDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable childIconId;
@property (nonatomic) int32_t entityType;
@property (nonatomic, copy) NSString * _Nullable iconId;
@property (nonatomic, copy) NSString * _Nullable imageBaseUrl;
@property (nonatomic) float size;
@property (nonatomic) int32_t subEntityType;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) PropertyDO * _Nullable ofProperty;
@end


/// This class contains all public api for core positioning.
SWIFT_CLASS("_TtC11MapstedCore14MapstedCoreApi")
@interface MapstedCoreApi : NSObject
/// Represents the singleton shared instance of th this class
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapstedCoreApi * _Nonnull shared;)
+ (MapstedCoreApi * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Initializer method
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Get the best localized language.
///
/// returns:
/// the type of current language.
- (MNLanguageType)bestLocalizedLanguage SWIFT_WARN_UNUSED_RESULT;
@end







@interface MapstedCoreApi (SWIFT_EXTENSION(MapstedCore)) <CoreInitCallback>
- (void)onSuccess;
- (void)onFailureWithErrorCode:(NSInteger)errorCode errorMessage:(NSString * _Nonnull)errorMessage;
- (void)onStatusMessageWithMessageType:(enum StatusMessageType)messageType;
@end






@class MNPosition;
@class MNEvent;
@class MNRouteResponse;
@class MNRouteUserProgress;
@class MNRouteSegment;

SWIFT_CLASS("_TtC11MapstedCore18MapstedCoreSyncApi")
@interface MapstedCoreSyncApi : NSObject
/// Returns the singleton shared instance of the class
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MapstedCoreSyncApi * _Nonnull shared;)
+ (MapstedCoreSyncApi * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, strong) MNAssistedPositioningManager * _Nonnull assistedPositioningManager;
- (BOOL)isCalibration SWIFT_WARN_UNUSED_RESULT;
- (void)onMapstedAlertEventWithPropertyId:(NSInteger)propertyId triggerId:(NSString * _Nonnull)triggerId alertId:(NSString * _Nonnull)alertId;
- (void)onBearingChangedWithDegree:(CGFloat)degree;
- (void)addNearbyPropertiesWithPropertyIds:(NSSet<NSNumber *> * _Nonnull)propertyIds;
- (void)removeNearbyPropertiesWithPropertyIds:(NSSet<NSNumber *> * _Nonnull)propertyIds;
- (NSSet<NSNumber *> * _Nonnull)getNearbyProperties SWIFT_WARN_UNUSED_RESULT;
- (void)onPositionChangeWithPosition:(MNPosition * _Nonnull)position;
- (void)onPositionAnimationWithPosition:(MNPosition * _Nonnull)position animationBegins:(BOOL)animationBegins;
- (void)setPositionVisibilityWithVisible:(BOOL)visible;
- (void)onMapstedMarketingEventWithPropertyId:(NSInteger)propertyId triggerId:(NSString * _Nonnull)triggerId campaignId:(NSString * _Nonnull)campaignId;
- (NSString * _Nullable)onMapstedMarketingEventWithPropertyId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
- (BOOL)downloadPropertyAndCategorySync SWIFT_WARN_UNUSED_RESULT;
- (void)fetchCategoryTreeForPropertyWithPropertyId:(NSInteger)propertyId completion:(void (^ _Nullable)(CMSCategoryTree * _Nullable))completion;
- (BOOL)downloadPropertyInfoSync SWIFT_WARN_UNUSED_RESULT;
- (void)downloadPropertyMetaDataAsyncWithPropertyId:(NSInteger)propertyId completion:(void (^ _Nullable)(BOOL))completion;
- (void)downloadPropertyInfoAsyncWithCompletion:(void (^ _Nullable)(BOOL))completion;
- (void)downloadPropertyDataWithPropertyId:(NSInteger)propertyId progress:(void (^ _Nonnull)(float))progress completed:(void (^ _Nonnull)(void))completed;
- (void)downloadPropertyCMSDataWithPropertyId:(NSInteger)propertyId completed:(void (^ _Nonnull)(void))completed;
- (void)removeImagesWithUrlMap:(NSDictionary<NSString *, NSString *> * _Nonnull)urlMap;
- (void)fetchImagesFromServerAsyncWithUrlMap:(NSDictionary<NSNumber *, NSString *> * _Nonnull)urlMap dataId:(NSInteger)dataId dataType:(MNDataType)dataType;
- (void)fetchPropertyInfoImagesFromServerAsyncWithUrlMap:(NSDictionary<NSString *, NSString *> * _Nonnull)urlMap dataId:(NSInteger)dataId dataType:(MNDataType)dataType;
- (NSInteger)propertyVersionWithPropertyId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)languageVersionForPropertyDataWithPropertyId:(NSInteger)propertyId languageType:(MNLanguageType)languageType SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)buildingVersionWithBuildingId:(NSInteger)buildingId SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)languageVersionForBuildingDataWithBuildingId:(NSInteger)buildingId languageType:(MNLanguageType)languageType SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)jsonDataForPropertyInfos SWIFT_WARN_UNUSED_RESULT;
- (MNObjectDataMap * _Nullable)objectDataMapForPropertyInfos SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)jsonDataForPropertyInfoWithPropertyId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
- (MNObjectDataMap * _Nullable)objectDataMapForPropertyDataWithPropertyId:(NSInteger)propertyId SWIFT_WARN_UNUSED_RESULT;
- (MNObjectDataMap * _Nullable)objectDataMapForBuildingDataWithBuildingId:(NSInteger)buildingId SWIFT_WARN_UNUSED_RESULT;
- (MNObjectDataMap * _Nullable)objectDataMapForPropertyLanguageWithPropertyId:(NSInteger)propertyId languageId:(NSInteger)languageId SWIFT_WARN_UNUSED_RESULT;
- (MNObjectDataMap * _Nullable)objectDatamapForBuildingLanguageWithBuildingId:(NSInteger)buildingId languageId:(NSInteger)languageId SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)versionForMarketingContentWithContentType:(MNContentType)contentType dataType:(MNDataType)dataType dataId:(NSInteger)dataId licenceId:(NSString * _Nonnull)licenceId SWIFT_WARN_UNUSED_RESULT;
- (MNObjectDataMap * _Nullable)objectDataMapForGlobalCategories SWIFT_WARN_UNUSED_RESULT;
- (void)removePropertyDataWithPropertyId:(NSInteger)propertyId;
- (void)removeBuildingDataWithBuildingId:(NSInteger)buildingId;
- (void)unloadPropertyDataWithPropertyId:(NSInteger)propertyId;
- (void)unloadBuildingDataWithBuildingId:(NSInteger)buildingId;
- (void)onMarketingWithEvent:(MNEvent * _Nonnull)event;
- (void)onShareLocationWithPosition:(MNPosition * _Nonnull)position;
- (void)onPostLiveLocationWithPosition:(MNPosition * _Nonnull)position;
- (void)postUserFirebaseTokenWithFirebaseToken:(NSString * _Nonnull)firebaseToken appPackageName:(NSString * _Nonnull)appPackageName;
- (void)onRouteResponseWithResponse:(MNRouteResponse * _Nonnull)response;
- (void)onRouteInstructionWithNextKeyPoint:(MNRouteNode * _Nonnull)nextKeyPoint;
- (void)onUserProgressAlongRouteWithRouteUserProgress:(MNRouteUserProgress * _Nonnull)routeUserProgress;
- (void)onRouteSegmentReachedWithCurrentSegment:(MNRouteSegment * _Nonnull)currentSegment visitedSegments:(NSArray<MNRouteSegment *> * _Nonnull)visitedSegments upcomingSegments:(NSArray<MNRouteSegment *> * _Nonnull)upcomingSegments;
- (void)onRoutingStatusWithIsRoutingModeOn:(BOOL)isRoutingModeOn latestRouteResponse:(MNRouteResponse * _Nonnull)latestRouteResponse;
- (void)onRouteRecalculationWithNewRouteResponse:(MNRouteResponse * _Nonnull)newRouteResponse;
- (void)onDestinationReachedWithDestinationEntityId:(NSInteger)destinationEntityId;
- (NSString * _Nonnull)licenceKey SWIFT_WARN_UNUSED_RESULT;
- (BOOL)validateLicenceOnline SWIFT_WARN_UNUSED_RESULT;
@end


@interface MapstedCoreSyncApi (SWIFT_EXTENSION(MapstedCore))
- (void)onLicenceStatusChangedWithNewStatus:(MNLicenceStatus)newStatus;
@end


@interface MapstedCoreSyncApi (SWIFT_EXTENSION(MapstedCore))
- (void)onSensorAccuracyChangedWithType:(NSInteger)sensorTypeRawValue newValue:(NSInteger)newValue;
@end


@interface MapstedCoreSyncApi (SWIFT_EXTENSION(MapstedCore))
- (void)onSDKSuccess;
- (void)onSDKFailureWithErrorCode:(NSInteger)errorCode errorMessage:(NSString * _Nonnull)errorMessage;
@end


SWIFT_CLASS("_TtC11MapstedCore15MapstedWaypoint")
@interface MapstedWaypoint : NSObject
- (NSInteger)getPropertyId SWIFT_WARN_UNUSED_RESULT;
/// buildingId > 0 if single building, buildingId = -1 if multi-building
- (NSInteger)getBuildingId SWIFT_WARN_UNUSED_RESULT;
- (NSArray<MNMercatorZone *> * _Nonnull)getLocations SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
- (MapstedWaypoint * _Nullable)clone SWIFT_WARN_UNUSED_RESULT;
- (void)addLocationWithLocation:(MNMercatorZone * _Nonnull)location name:(NSString * _Nullable)name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11MapstedCore21MapstedEntityWaypoint")
@interface MapstedEntityWaypoint : MapstedWaypoint
- (NSArray<MNEntityZone *> * _Nonnull)getEntityZones SWIFT_WARN_UNUSED_RESULT;
@end





@interface MapstedSearchEntity (SWIFT_EXTENSION(MapstedCore)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end




/// Listener to changes in Position animation
SWIFT_PROTOCOL("_TtP11MapstedCore25PositionAnimationListener_")
@protocol PositionAnimationListener
/// Called when position changes with animation
/// \param position new position
///
/// \param animationBegins Whether animation has began
///
- (void)onPositionAnimationWithPosition:(MNPosition * _Nonnull)position animationBegins:(BOOL)animationBegins;
@end


/// Listener to changes in Position
SWIFT_PROTOCOL("_TtP11MapstedCore22PositionChangeListener_")
@protocol PositionChangeListener
/// Called when position changes
/// \param position new position
///
- (void)onPositionChangeWithPosition:(MNPosition * _Nonnull)position;
@end


/// Listener to changes in position visibility
SWIFT_PROTOCOL("_TtP11MapstedCore26PositionVisibilityListener_")
@protocol PositionVisibilityListener
/// This function will call everytime position changes
/// Changes visibility of position indicator
/// \param visible Whether position indicator should be visible
///
- (void)setPositionVisibilityWithVisible:(BOOL)visible;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore18PropertyCategoryDO")
@interface PropertyCategoryDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PropertyCategoryDO (SWIFT_EXTENSION(MapstedCore))
- (void)addBranchCategoriesObject:(CategoryDO * _Nonnull)value;
- (void)removeBranchCategoriesObject:(CategoryDO * _Nonnull)value;
- (void)addBranchCategories:(NSSet * _Nonnull)values;
- (void)removeBranchCategories:(NSSet * _Nonnull)values;
@end


@interface PropertyCategoryDO (SWIFT_EXTENSION(MapstedCore))
- (void)addRootCategoriesObject:(CategoryDO * _Nonnull)value;
- (void)removeRootCategoriesObject:(CategoryDO * _Nonnull)value;
- (void)addRootCategories:(NSSet * _Nonnull)values;
- (void)removeRootCategories:(NSSet * _Nonnull)values;
@end


@interface PropertyCategoryDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable imageBaseUrl;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable syncId;
@property (nonatomic, strong) NSSet * _Nullable branchCategories;
@property (nonatomic, strong) NSSet * _Nullable rootCategories;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore21PropertyCoverImagesDO")
@interface PropertyCoverImagesDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PropertyCoverImagesDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable imageId;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, strong) PropertyDO * _Nullable ofProperty;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore10PropertyDO")
@interface PropertyDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PropertyDO (SWIFT_EXTENSION(MapstedCore))
- (void)addCoverImagesObject:(PropertyCoverImagesDO * _Nonnull)value;
- (void)removeCoverImagesObject:(PropertyCoverImagesDO * _Nonnull)value;
- (void)addCoverImages:(NSSet * _Nonnull)values;
- (void)removeCoverImages:(NSSet * _Nonnull)values;
@end


@interface PropertyDO (SWIFT_EXTENSION(MapstedCore))
- (void)addMapIconsObject:(MapIconsDO * _Nonnull)value;
- (void)removeMapIconsObject:(MapIconsDO * _Nonnull)value;
- (void)addMapIcons:(NSSet * _Nonnull)values;
- (void)removeMapIcons:(NSSet * _Nonnull)values;
@end


@interface PropertyDO (SWIFT_EXTENSION(MapstedCore))
- (void)addBuildingsObject:(BuildingDO * _Nonnull)value;
- (void)removeBuildingsObject:(BuildingDO * _Nonnull)value;
- (void)addBuildings:(NSSet * _Nonnull)values;
- (void)removeBuildings:(NSSet * _Nonnull)values;
@end

@class PropertyLanguageDO;

@interface PropertyDO (SWIFT_EXTENSION(MapstedCore))
- (void)addPropertyLanguagesObject:(PropertyLanguageDO * _Nonnull)value;
- (void)removePropertyLanguagesObject:(PropertyLanguageDO * _Nonnull)value;
- (void)addPropertyLanguages:(NSSet * _Nonnull)values;
- (void)removePropertyLanguages:(NSSet * _Nonnull)values;
@end

@class WorkingPeriodDO;

@interface PropertyDO (SWIFT_EXTENSION(MapstedCore))
- (void)addWorkingPeriodsObject:(WorkingPeriodDO * _Nonnull)value;
- (void)removeWorkingPeriodsObject:(WorkingPeriodDO * _Nonnull)value;
- (void)addWorkingPeriods:(NSSet * _Nonnull)values;
- (void)removeWorkingPeriods:(NSSet * _Nonnull)values;
@end


@interface PropertyDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable addressCity;
@property (nonatomic, copy) NSString * _Nullable addressCountry;
@property (nonatomic, copy) NSString * _Nullable addressFull;
@property (nonatomic, copy) NSString * _Nullable addressPostal;
@property (nonatomic, copy) NSString * _Nullable addressProvince;
@property (nonatomic, copy) NSString * _Nullable addressStreet;
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSString * _Nullable centroidType;
@property (nonatomic) double centroidX;
@property (nonatomic) double centroidY;
@property (nonatomic) double centroidZ;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic, copy) NSString * _Nullable iconImageId;
@property (nonatomic, copy) NSString * _Nullable imageBaseUrl;
@property (nonatomic, copy) NSString * _Nullable phoneNumber;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable syncId;
@property (nonatomic, copy) NSString * _Nullable timeZoneName;
@property (nonatomic) int32_t timeZoneOffset;
@property (nonatomic, copy) NSString * _Nullable website;
@property (nonatomic, strong) NSSet * _Nullable buildings;
@property (nonatomic, strong) NSSet * _Nullable coverImages;
@property (nonatomic, strong) NSSet * _Nullable mapIcons;
@property (nonatomic, strong) NSSet * _Nullable propertyLanguages;
@property (nonatomic, strong) NSSet * _Nullable workingPeriods;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore18PropertyLanguageDO")
@interface PropertyLanguageDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PropertyLanguageDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable descriptionText;
@property (nonatomic, copy) NSString * _Nullable iconImage;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable longName;
@property (nonatomic, copy) NSString * _Nullable phoneNumber;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable shortName;
@property (nonatomic, copy) NSString * _Nullable website;
@property (nonatomic, strong) PropertyDO * _Nullable ofProperty;
@end


SWIFT_CLASS("_TtC11MapstedCore22PropertySearchEntities")
@interface PropertySearchEntities : MapstedSearchEntities
- (NSDictionary<NSNumber *, MapstedSearchEntity *> * _Nonnull)getSearchEntityMap SWIFT_WARN_UNUSED_RESULT;
- (MNSearchEntity * _Nullable)getEntityWithSearchEntityId:(NSInteger)searchEntityId SWIFT_WARN_UNUSED_RESULT;
- (NSArray<MNSearchEntity *> * _Nonnull)getSearchEntities SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11MapstedCore20PropertySearchEntity")
@interface PropertySearchEntity : MapstedSearchEntity
@end


/// Encapsulates ways of reaching a nework resource
SWIFT_CLASS("_TtC11MapstedCore12Reachability")
@interface Reachability : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Reachability * _Nonnull shared;)
+ (Reachability * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Checks whether a resource is reachable in one or more ways
///
/// returns:
/// How to reach the network resource
- (enum IsReachable)checkReachable SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore14RecentEntityDO")
@interface RecentEntityDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface RecentEntityDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSString * _Nullable campaignId;
@property (nonatomic, copy) NSDate * _Nullable dateCreated;
@property (nonatomic, copy) NSString * _Nullable englishName;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic) BOOL isSearch;
@property (nonatomic) int32_t propertyId;
@end


SWIFT_PROTOCOL("_TtP11MapstedCore22RoutingRequestCallback_")
@protocol RoutingRequestCallback
- (void)onSuccessWithRouteResponse:(MNRouteResponse * _Nonnull)routeResponse;
- (void)onErrorWithErrorCode:(NSInteger)errorCode errorMessage:(NSString * _Nonnull)errorMessage alertIds:(NSArray<NSString *> * _Nonnull)alertIds;
@end

typedef SWIFT_ENUM(NSInteger, SensorDataError, closed) {
  SensorDataErrorMagnetometerAccuracyDataUnavailable = 0,
  SensorDataErrorAccelerometerAccuracyDataUnavailable = 1,
  SensorDataErrorBarometerAccuracyDataUnavailable = 2,
  SensorDataErrorGravityAccuracyDataUnavailable = 3,
  SensorDataErrorGyroscopeAccuracyDataUnavailable = 4,
  SensorDataErrorAccuracyDataUnavailable = 5,
};
static NSString * _Nonnull const SensorDataErrorDomain = @"MapstedCore.SensorDataError";


/// Responsible for handling all delegate callbacks for the underlying session.
SWIFT_CLASS("_TtC11MapstedCore15SessionDelegate")
@interface SessionDelegate : NSObject
/// Initializes the <code>SessionDelegate</code> instance.
///
/// returns:
/// The new <code>SessionDelegate</code> instance.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Returns a <code>Bool</code> indicating whether the <code>SessionDelegate</code> implements or inherits a method that can respond
/// to a specified message.
/// \param selector A selector that identifies a message.
///
///
/// returns:
/// <code>true</code> if the receiver implements or inherits a method that can respond to selector, otherwise <code>false</code>.
- (BOOL)respondsToSelector:(SEL _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
@end


@interface SessionDelegate (SWIFT_EXTENSION(MapstedCore)) <NSURLSessionDownloadDelegate>
/// Tells the delegate that a download task has finished downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that finished.
///
/// \param location A file URL for the temporary file. Because the file is temporary, you must either
/// open the file for reading or move it to a permanent location in your app’s sandbox
/// container directory before returning from this delegate method.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
/// Periodically informs the delegate about the download’s progress.
/// \param session The session containing the download task.
///
/// \param downloadTask The download task.
///
/// \param bytesWritten The number of bytes transferred since the last time this delegate
/// method was called.
///
/// \param totalBytesWritten The total number of bytes transferred so far.
///
/// \param totalBytesExpectedToWrite The expected length of the file, as provided by the Content-Length
/// header. If this header was not provided, the value is
/// <code>NSURLSessionTransferSizeUnknown</code>.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
/// Tells the delegate that the download task has resumed downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that resumed. See explanation in the discussion.
///
/// \param fileOffset If the file’s cache policy or last modified date prevents reuse of the
/// existing content, then this value is zero. Otherwise, this value is an
/// integer representing the number of bytes on disk that do not need to be
/// retrieved again.
///
/// \param expectedTotalBytes The expected length of the file, as provided by the Content-Length header.
/// If this header was not provided, the value is NSURLSessionTransferSizeUnknown.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
@end

@class NSURLSessionStreamTask;
@class NSOutputStream;

SWIFT_AVAILABILITY(tvos,introduced=9.0) SWIFT_AVAILABILITY(macos,introduced=10.11) SWIFT_AVAILABILITY(ios,introduced=9.0)
@interface SessionDelegate (SWIFT_EXTENSION(MapstedCore)) <NSURLSessionStreamDelegate>
/// Tells the delegate that the read side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session readClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the write side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session writeClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the system has determined that a better route to the host is available.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the stream task has been completed and provides the unopened stream objects.
/// \param session The session.
///
/// \param streamTask The stream task.
///
/// \param inputStream The new input stream.
///
/// \param outputStream The new output stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session streamTask:(NSURLSessionStreamTask * _Nonnull)streamTask didBecomeInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
@end


@interface SessionDelegate (SWIFT_EXTENSION(MapstedCore)) <NSURLSessionDataDelegate>
/// Tells the delegate that the data task received the initial reply (headers) from the server.
/// \param session The session containing the data task that received an initial reply.
///
/// \param dataTask The data task that received an initial reply.
///
/// \param response A URL response object populated with headers.
///
/// \param completionHandler A completion handler that your code calls to continue the transfer, passing a
/// constant to indicate whether the transfer should continue as a data task or
/// should become a download task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
/// Tells the delegate that the data task was changed to a download task.
/// \param session The session containing the task that was replaced by a download task.
///
/// \param dataTask The data task that was replaced by a download task.
///
/// \param downloadTask The new download task that replaced the data task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
/// Tells the delegate that the data task has received some of the expected data.
/// \param session The session containing the data task that provided data.
///
/// \param dataTask The data task that provided data.
///
/// \param data A data object containing the transferred data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
/// Asks the delegate whether the data (or upload) task should store the response in the cache.
/// \param session The session containing the data (or upload) task.
///
/// \param dataTask The data (or upload) task.
///
/// \param proposedResponse The default caching behavior. This behavior is determined based on the current
/// caching policy and the values of certain received headers, such as the Pragma
/// and Cache-Control headers.
///
/// \param completionHandler A block that your handler must call, providing either the original proposed
/// response, a modified version of that response, or NULL to prevent caching the
/// response. If your delegate implements this method, it must call this completion
/// handler; otherwise, your app leaks memory.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end


@interface SessionDelegate (SWIFT_EXTENSION(MapstedCore)) <NSURLSessionDelegate>
/// Tells the delegate that the session has been invalidated.
/// \param session The session object that was invalidated.
///
/// \param error The error that caused invalidation, or nil if the invalidation was explicit.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
/// Requests credentials from the delegate in response to a session-level authentication request from the
/// remote server.
/// \param session The session containing the task that requested authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate that all messages enqueued for a session have been delivered.
/// \param session The session that no longer has any outstanding requests.
///
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
@end

@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(MapstedCore)) <NSURLSessionTaskDelegate>
/// Tells the delegate that the remote server requested an HTTP redirect.
/// \param session The session containing the task whose request resulted in a redirect.
///
/// \param task The task whose request resulted in a redirect.
///
/// \param response An object containing the server’s response to the original request.
///
/// \param request A URL request object filled out with the new location.
///
/// \param completionHandler A closure that your handler should call with either the value of the request
/// parameter, a modified URL request object, or NULL to refuse the redirect and
/// return the body of the redirect response.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
/// Requests credentials from the delegate in response to an authentication request from the remote server.
/// \param session The session containing the task whose request requires authentication.
///
/// \param task The task whose request requires authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate when a task requires a new request body stream to send to the remote server.
/// \param session The session containing the task that needs a new body stream.
///
/// \param task The task that needs a new body stream.
///
/// \param completionHandler A completion handler that your delegate method should call with the new body stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
/// Periodically informs the delegate of the progress of sending body content to the server.
/// \param session The session containing the data task.
///
/// \param task The data task.
///
/// \param bytesSent The number of bytes sent since the last time this delegate method was called.
///
/// \param totalBytesSent The total number of bytes sent so far.
///
/// \param totalBytesExpectedToSend The expected length of the body data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
/// Tells the delegate that the session finished collecting metrics for the task.
/// \param session The session collecting the metrics.
///
/// \param task The task whose metrics have been collected.
///
/// \param metrics The collected metrics.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics SWIFT_AVAILABILITY(tvos,introduced=10.0) SWIFT_AVAILABILITY(macos,introduced=10.12) SWIFT_AVAILABILITY(ios,introduced=10.0);
/// Tells the delegate that the task finished transferring data.
/// \param session The session containing the task whose request finished transferring data.
///
/// \param task The task whose request finished transferring data.
///
/// \param error If an error occurred, an error object indicating how the transfer failed, otherwise nil.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end

typedef SWIFT_ENUM(NSInteger, StatusMessageType, closed) {
  StatusMessageTypeFetchingPropertyList = 1,
  StatusMessageTypeFetchingPropertyFailed = 2,
  StatusMessageTypeNoPropertiesFound = 3,
  StatusMessageTypeFetchingPropertyListCompleted = 4,
  StatusMessageTypeFetchingGlobalCategories = 5,
  StatusMessageTypeFetchingPropertyCategories = 6,
  StatusMessageTypeFetchingPropertyCategoriesCompleted = 7,
  StatusMessageTypeFetchingNearByProperties = 8,
  StatusMessageTypeInternetNotReachable = 9,
  StatusMessageTypeOther = 10,
};


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore7StoreDO")
@interface StoreDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class StoreSubcategoryDO;

@interface StoreDO (SWIFT_EXTENSION(MapstedCore))
- (void)addSubcategoriesObject:(StoreSubcategoryDO * _Nonnull)value;
- (void)removeSubcategoriesObject:(StoreSubcategoryDO * _Nonnull)value;
- (void)addSubcategories:(NSSet * _Nonnull)values;
- (void)removeSubcategories:(NSSet * _Nonnull)values;
@end

@class StoreLanguageDO;

@interface StoreDO (SWIFT_EXTENSION(MapstedCore))
- (void)addLanguagesObject:(StoreLanguageDO * _Nonnull)value;
- (void)removeLanguagesObject:(StoreLanguageDO * _Nonnull)value;
- (void)addLanguages:(NSSet * _Nonnull)values;
- (void)removeLanguages:(NSSet * _Nonnull)values;
@end

@class StoreHoursDO;

@interface StoreDO (SWIFT_EXTENSION(MapstedCore))
- (void)addOpeningHoursObject:(StoreHoursDO * _Nonnull)value;
- (void)removeOpeningHoursObject:(StoreHoursDO * _Nonnull)value;
- (void)addOpeningHours:(NSSet * _Nonnull)values;
- (void)removeOpeningHours:(NSSet * _Nonnull)values;
@end


@interface StoreDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSString * _Nullable englishName;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic, copy) NSString * _Nullable imageBaseUrl;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, copy) NSString * _Nullable syncId;
@property (nonatomic, strong) NSSet * _Nullable languages;
@property (nonatomic, strong) BuildingEntitiesDO * _Nullable ofBuilding;
@property (nonatomic, strong) NSSet * _Nullable openingHours;
@property (nonatomic, strong) NSSet * _Nullable subcategories;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore12StoreHoursDO")
@interface StoreHoursDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface StoreHoursDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic) int32_t closingDayOfWeek;
@property (nonatomic) int32_t closingHour;
@property (nonatomic) int32_t closingMinute;
@property (nonatomic) int32_t entityId;
@property (nonatomic) int32_t floorId;
@property (nonatomic) int32_t openingDayOfWeek;
@property (nonatomic) int32_t openingHour;
@property (nonatomic) int32_t openingMinute;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, strong) StoreDO * _Nullable ofStore;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore15StoreLanguageDO")
@interface StoreLanguageDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface StoreLanguageDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t buildingId;
@property (nonatomic, copy) NSString * _Nullable categoryId;
@property (nonatomic, copy) NSString * _Nullable categoryName;
@property (nonatomic, copy) NSString * _Nullable descriptionText;
@property (nonatomic) int32_t entityId;
@property (nonatomic, copy) NSString * _Nullable iconImage;
@property (nonatomic) BOOL iconStyleLocationSet;
@property (nonatomic) double iconStyleLocationX;
@property (nonatomic) double iconStyleLocationY;
@property (nonatomic) float iconStyleRotation;
@property (nonatomic) BOOL iconStyleRotationSet;
@property (nonatomic) float iconStyleSize;
@property (nonatomic, copy) NSString * _Nullable keywords;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable longName;
@property (nonatomic) BOOL mobileSettingFreeRotation;
@property (nonatomic, copy) NSString * _Nullable shortName;
@property (nonatomic) BOOL styleUseIcon;
@property (nonatomic) BOOL styleUseText;
@property (nonatomic) BOOL textStyleLocationSet;
@property (nonatomic) double textStyleLocationX;
@property (nonatomic) double textStyleLocationY;
@property (nonatomic) float textStyleRotation;
@property (nonatomic, copy) NSString * _Nullable website;
@property (nonatomic, strong) StoreDO * _Nullable ofStore;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore18StoreSubcategoryDO")
@interface StoreSubcategoryDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface StoreSubcategoryDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable idString;
@property (nonatomic, copy) NSString * _Nullable languageCode;
@property (nonatomic, copy) NSString * _Nullable nameString;
@property (nonatomic, strong) StoreDO * _Nullable ofStore;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore13SubCategoryDO")
@interface SubCategoryDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface SubCategoryDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic, copy) NSString * _Nullable categoryId;
@property (nonatomic, strong) CategoryDO * _Nullable parentCategory;
@end







SWIFT_CLASS("_TtC11MapstedCore18UploadTaskDelegate")
@interface UploadTaskDelegate : DataTaskDelegate
@end


/// :nodoc:
SWIFT_CLASS("_TtC11MapstedCore15WorkingPeriodDO")
@interface WorkingPeriodDO : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface WorkingPeriodDO (SWIFT_EXTENSION(MapstedCore))
@property (nonatomic) int32_t closingDayOfWeek;
@property (nonatomic) int32_t closingHour;
@property (nonatomic) int32_t closingMinute;
@property (nonatomic) int32_t openingDayOfWeek;
@property (nonatomic) int32_t openingHour;
@property (nonatomic) int32_t openingMinute;
@property (nonatomic) int32_t propertyId;
@property (nonatomic, strong) PropertyDO * _Nullable ofProperty;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
